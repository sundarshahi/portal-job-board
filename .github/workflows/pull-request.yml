name: Pull request

on:
  pull_request:
    paths-ignore:
      - '**.md'

jobs:
  lint:
    name: Lint
    env:
      CI: true

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest # or "latest", "canary", <sha>

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: pnpm

      - name: Install dependencies
        run: bun install --no-frozen-lockfile

      - name: TypeScript check
        run: bun lint

      - name: Eslint check
        run: bun lint

  unit_test:
    name: Unit test
    env:
      CI: true

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest # or "latest", "canary", <sha>

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: pnpm

      - name: Install dependencies
        run: bun install --no-frozen-lockfile

      - name: Get cypress version
        id: cypress-version
        run: echo "version=$(bun info cypress version)" >> $GITHUB_OUTPUT

      - name: Cache cypress binary
        id: cache-cypress-binary
        uses: actions/cache@v4
        with:
          path: ~/.cache/Cypress
          key: cypress-binary-${{ runner.os }}-${{ steps.cypress-version.outputs.version }}

      - name: Install cypress binary
        if: steps.cache-cypress-binary.outputs.cache-hit != 'true'
        run: bun cypress install

      - name: Unit test
        run: bun test:unit

      - name: Update coverage report
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  e2e_tests:
    name: E2E test
    env:
      CI: true

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest # or "latest", "canary", <sha>

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: pnpm

      - name: Install dependencies
        run: bun install --no-frozen-lockfile

      - name: Get cypress version
        id: cypress-version
        run: echo "version=$(bun info cypress version)" >> $GITHUB_OUTPUT

      - name: Cache cypress binary
        id: cache-cypress-binary
        uses: actions/cache@v4
        with:
          path: ~/.cache/Cypress
          key: cypress-binary-${{ runner.os }}-${{ steps.cypress-version.outputs.version }}

      - name: Install cypress binary
        if: steps.cache-cypress-binary.outputs.cache-hit != 'true'
        run: bun cypress install

      - name: E2E test
        run: bun test:e2e:ci
